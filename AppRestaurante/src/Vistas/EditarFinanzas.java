/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vistas;


import Controlador.GananciasDO;
import Modelo.Conexion;
import Modelo.Ganancia;
import static Vistas.InicioMenuPrincipalAdmin.sesion_usuario;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;


public final class EditarFinanzas extends javax.swing.JFrame {
    String user,nombre_usuario;
    
    
    DefaultTableModel model;
    
      private GananciasDO gdo = new GananciasDO();
    
    public EditarFinanzas() throws SQLException {
        initComponents();
        setSize(1055, 521);
        setResizable(false);
        setTitle("Ganancias");
        setLocationRelativeTo(null);
        //******
        user =Login.user;
        sesion_usuario = 1;
        setTitle("Ganancias - sesion actual : "+ user);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        //**********
        ImageIcon wallpaper = new ImageIcon("src/Img/orange-gradient-wallpaper-4422.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel10.getWidth(), 
        jLabel10.getHeight(), Image.SCALE_DEFAULT));
        jLabel10.setIcon(icono);
        this.repaint();
        //**********
        LLenadodeFormaPagos();
        listarGanancias();
        
    }
    
    
    
      public void listarGanancias() throws SQLException{
      gdo.listarGanancias(jTable1);
    }
      
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        DateDesdeVentas = new com.toedter.calendar.JDateChooser();
        DateHastaVentas = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        BtnBuscar = new javax.swing.JButton();
        txtIdBoleta = new javax.swing.JTextField();
        txtEfectivo = new javax.swing.JTextField();
        txtCambio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTotalPagar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        cbFormaP = new javax.swing.JComboBox();
        txtFormaPago = new javax.swing.JTextField();
        BtnImprimir = new javax.swing.JButton();
        Imprimir_Por_Fechas = new javax.swing.JButton();
        Imprimir_idBoleta = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 139, 745, 200));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Logochico.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(832, 0, -1, -1));

        jLabel2.setText("Hasta");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(829, 157, -1, -1));

        jLabel3.setText("Desde");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(827, 126, -1, -1));
        getContentPane().add(DateDesdeVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(867, 120, 130, -1));
        getContentPane().add(DateHastaVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(867, 151, 130, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/volver.png"))); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Boletas");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 99, -1, -1));

        BtnBuscar.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        BtnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Buscar.png"))); // NOI18N
        BtnBuscar.setText("Buscar");
        BtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(BtnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(803, 210, 236, 42));

        txtIdBoleta.setEditable(false);
        txtIdBoleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdBoletaActionPerformed(evt);
            }
        });
        getContentPane().add(txtIdBoleta, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 79, -1));

        txtEfectivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEfectivoKeyTyped(evt);
            }
        });
        getContentPane().add(txtEfectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, 94, -1));

        txtCambio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCambioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCambioKeyTyped(evt);
            }
        });
        getContentPane().add(txtCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 360, 82, -1));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel5.setText("CAMBIO");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 360, -1, -1));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel6.setText("EFECTIVO");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, -1, -1));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel7.setText("ID_BOLETA");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, -1, -1));

        txtTotalPagar.setEditable(false);
        getContentPane().add(txtTotalPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 86, -1));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel8.setText("TOTAL_PAGAR");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, -1, -1));

        btnEditar.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(803, 263, 236, -1));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jLabel9.setText("ID_FORMA_PAGO");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        cbFormaP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFormaPActionPerformed(evt);
            }
        });
        getContentPane().add(cbFormaP, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 84, -1));

        txtFormaPago.setEditable(false);
        getContentPane().add(txtFormaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 25, -1));

        BtnImprimir.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        BtnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/reporte.png"))); // NOI18N
        BtnImprimir.setText("Imprimir Todas");
        BtnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(BtnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(803, 315, 236, -1));

        Imprimir_Por_Fechas.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        Imprimir_Por_Fechas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/reporte.png"))); // NOI18N
        Imprimir_Por_Fechas.setText("Imprimir Segun Fechas");
        Imprimir_Por_Fechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Imprimir_Por_FechasActionPerformed(evt);
            }
        });
        getContentPane().add(Imprimir_Por_Fechas, new org.netbeans.lib.awtextra.AbsoluteConstraints(803, 367, 236, -1));

        Imprimir_idBoleta.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        Imprimir_idBoleta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/reporte.png"))); // NOI18N
        Imprimir_idBoleta.setText("Imprimir Segun Boleta");
        Imprimir_idBoleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Imprimir_idBoletaActionPerformed(evt);
            }
        });
        getContentPane().add(Imprimir_idBoleta, new org.netbeans.lib.awtextra.AbsoluteConstraints(803, 419, 236, -1));

        jLabel10.setText("jLabel10");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
                Cajero c = null;
                c = new Cajero();
                c.setVisible(true);
                super.dispose();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void BtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarActionPerformed
    try {
        listarGananciasFiltro(jTable1);
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, "Ingresar Fechas");
        System.err.println("Ingresar Fechas" + e);
    }
      
       
    }//GEN-LAST:event_BtnBuscarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int seleccion = jTable1.rowAtPoint(evt.getPoint());
        txtIdBoleta.setText(jTable1.getValueAt(seleccion, 0)+"");
        txtEfectivo.setText(jTable1.getValueAt(seleccion, 4)+"");
        txtCambio.setText(jTable1.getValueAt(seleccion, 5)+"");
        txtTotalPagar.setText(jTable1.getValueAt(seleccion, 3)+"");
        txtFormaPago.setText(jTable1.getValueAt(seleccion, 8)+"");



    }//GEN-LAST:event_jTable1MouseClicked

    private void txtIdBoletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdBoletaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdBoletaActionPerformed

    private void txtCambioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCambioKeyReleased
        try {
            int num1,num2,total;  
             num1=Integer.parseInt(txtTotalPagar.getText());
             num2=Integer.parseInt(txtEfectivo.getText());
             total=num2-num1;
          if (total<0){ 
              JOptionPane.showMessageDialog(null, "Cuidado!!! Efectivo insuficiente para el pago");
         }
          else {
             txtCambio.setText(total+"");
        } 
            
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, "ingresar valor total_pagar y efectivo");
        }
    }//GEN-LAST:event_txtCambioKeyReleased

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        if(txtTotalPagar.getText().isEmpty() || txtEfectivo.getText().isEmpty()||
                    txtCambio.getText().isEmpty() || txtFormaPago.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debes llenar los Campos Solicitados");
        }else{
            Ganancia g = new Ganancia();
            g.setID_BOLETA(Integer.parseInt(txtIdBoleta.getText()));
            g.setTOTAL_PAGAR(Integer.parseInt(txtTotalPagar.getText()));
            g.setEFECTIVO(Integer.parseInt(txtEfectivo.getText()));
            g.setCAMBIO(Integer.parseInt(txtCambio.getText())); 
            g.setID_FORMA_PAGO(Integer.parseInt(txtFormaPago.getText())); 
            JOptionPane.showMessageDialog(null, "Modificado Existoso");
            String mensaje = gdo.modificarGanancias(g);
            try {
                listarGanancias();
            } catch (SQLException ex) {
                Logger.getLogger(EditarFinanzas.class.getName()).log(Level.SEVERE, null, ex);
            }
                
        } 

    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtEfectivoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEfectivoKeyTyped
    char c = evt.getKeyChar();
        if(c<'0'|| c >'9')evt.consume();
        
    }//GEN-LAST:event_txtEfectivoKeyTyped

    private void cbFormaPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFormaPActionPerformed
    try {
        Connection con = Conexion.getConnection();
        //preparedStatement pst = null;
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM FORMAS_PAGO WHERE FORMA_PAGO='" + this.cbFormaP.getSelectedItem()+ "'");
        rs.next();
        this.txtFormaPago.setText(String.valueOf(rs.getInt("ID_FORMA_PAGO")));        //cbPagar.addItem(rs.getString("TOTAL_PEDIDO"));
        
    } catch(Exception e){
        System.err.println("error de llenado combobox desde bd" + e);
    }
    }//GEN-LAST:event_cbFormaPActionPerformed

    private void BtnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnImprimirActionPerformed
Document documento = new Document(PageSize.A4);
        Date Fecha = new Date();
        long numero = Fecha.getTime();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta+ "/Desktop/"+ "Boleta"+numero+".pdf"));
            com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/Img/Logochico.png");
            
            header.scaleToFit(207,88);
            header.setAlignment(Chunk.ALIGN_CENTER);
            
            Font fuente = new Font(Font.getFamily("ARIAL"),10,Font.BOLD);
            Paragraph nreporte = new Paragraph("NºBOLETA: "+ numero,fuente);
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Información De Boleta. \n \n");
            parrafo.setFont(FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.DARK_GRAY));
            
            documento.open();
            documento.add(header);
            documento.add(parrafo);
            documento.add(nreporte);

            
            PdfPTable tablaBoleta = new PdfPTable(9);
            tablaBoleta.setWidthPercentage(100);

            
            PdfPCell celda1 = new PdfPCell(new Paragraph("id_boleta", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda2 = new PdfPCell(new Paragraph("fecha", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda3 = new PdfPCell(new Paragraph("iva", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda4 = new PdfPCell(new Paragraph("total_pagar", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda5 = new PdfPCell(new Paragraph("efectivo", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda6 = new PdfPCell(new Paragraph("cambio", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda7 = new PdfPCell(new Paragraph("rut_cliente", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda8 = new PdfPCell(new Paragraph("id_empleado", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda9 = new PdfPCell(new Paragraph("id_forma_pago", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            
            tablaBoleta.addCell(celda1);
            tablaBoleta.addCell(celda2);
            tablaBoleta.addCell(celda3);
            tablaBoleta.addCell(celda4);
            tablaBoleta.addCell(celda5);
            tablaBoleta.addCell(celda6);
            tablaBoleta.addCell(celda7);
            tablaBoleta.addCell(celda8);
            tablaBoleta.addCell(celda9);
            
            
            try {
                Connection con  = Conexion.getConnection();
                PreparedStatement pst = con.prepareStatement("SELECT * FROM BOLETA");
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    do {                        
                        tablaBoleta.addCell(rs.getString(1));
                        tablaBoleta.addCell(rs.getString(2));
                        tablaBoleta.addCell(rs.getString(3));
                        tablaBoleta.addCell(rs.getString(4));
                        tablaBoleta.addCell(rs.getString(5));
                        tablaBoleta.addCell(rs.getString(6));
                        tablaBoleta.addCell(rs.getString(7));
                        tablaBoleta.addCell(rs.getString(8));
                        tablaBoleta.addCell(rs.getString(9));
                    } while (rs.next());
                    documento.add(tablaBoleta);
                }
                
                //Paragraph parrafo2 = new Paragraph();
                //parrafo2.setAlignment(Paragraph.ALIGN_CENTER);
                //parrafo2.add("\n \n ");
                //parrafo2.setFont(FontFactory.getFont("Calibri", 14, Font.BOLD, BaseColor.DARK_GRAY));
                
            } catch (SQLException | DocumentException e) {
                System.err.println("Error de obtencion desde BD impresion" + e);
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte Creado Correctamente");
        }catch (FileNotFoundException | DocumentException e) {
                System.err.println("Error de impresion" + e);
        } 
        catch (IOException ex) {
            Logger.getLogger(ImpresionListaProveedores.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error" +ex);
        }

    }//GEN-LAST:event_BtnImprimirActionPerformed

    private void Imprimir_Por_FechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Imprimir_Por_FechasActionPerformed

        
        
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-YYYY"); //DD-MON-YYYY HH:MI
        String fecha = sdf.format(DateDesdeVentas.getDate());
        String fecha1 = sdf.format(DateHastaVentas.getDate());
        
        
        
        
        Document documento = new Document(PageSize.A4);
        Date Fecha = new Date();
        long numero = Fecha.getTime();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta+ "/Desktop/"+ "Boleta"+numero+".pdf"));
            com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/Img/Logochico.png");
            
            header.scaleToFit(207,88);
            header.setAlignment(Chunk.ALIGN_CENTER);
            
            Font fuente = new Font(Font.getFamily("ARIAL"),10,Font.BOLD);
            Paragraph nreporte = new Paragraph("NºBOLETA: "+ numero,fuente);
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Información De Boleta. \n \n");
            parrafo.setFont(FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.DARK_GRAY));
            
            documento.open();
            documento.add(header);
            documento.add(parrafo);
            documento.add(nreporte);

            
            PdfPTable tablaBoleta = new PdfPTable(9);
            tablaBoleta.setWidthPercentage(100);

            
            PdfPCell celda1 = new PdfPCell(new Paragraph("id_boleta", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda2 = new PdfPCell(new Paragraph("fecha", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda3 = new PdfPCell(new Paragraph("iva", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda4 = new PdfPCell(new Paragraph("total_pagar", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda5 = new PdfPCell(new Paragraph("efectivo", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda6 = new PdfPCell(new Paragraph("cambio", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda7 = new PdfPCell(new Paragraph("rut_cliente", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda8 = new PdfPCell(new Paragraph("id_empleado", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda9 = new PdfPCell(new Paragraph("id_forma_pago", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            
            tablaBoleta.addCell(celda1);
            tablaBoleta.addCell(celda2);
            tablaBoleta.addCell(celda3);
            tablaBoleta.addCell(celda4);
            tablaBoleta.addCell(celda5);
            tablaBoleta.addCell(celda6);
            tablaBoleta.addCell(celda7);
            tablaBoleta.addCell(celda8);
            tablaBoleta.addCell(celda9);
            
            
            try {
                Connection con  = Conexion.getConnection();
                PreparedStatement pst = con.prepareStatement("select * from boleta where fecha between'" + fecha + "' and '" + fecha1 + "'");
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    do {                        
                        tablaBoleta.addCell(rs.getString(1));
                        tablaBoleta.addCell(rs.getString(2));
                        tablaBoleta.addCell(rs.getString(3));
                        tablaBoleta.addCell(rs.getString(4));
                        tablaBoleta.addCell(rs.getString(5));
                        tablaBoleta.addCell(rs.getString(6));
                        tablaBoleta.addCell(rs.getString(7));
                        tablaBoleta.addCell(rs.getString(8));
                        tablaBoleta.addCell(rs.getString(9));
                    } while (rs.next());
                    documento.add(tablaBoleta);
                }
                
                //Paragraph parrafo2 = new Paragraph();
                //parrafo2.setAlignment(Paragraph.ALIGN_CENTER);
                //parrafo2.add("\n \n ");
                //parrafo2.setFont(FontFactory.getFont("Calibri", 14, Font.BOLD, BaseColor.DARK_GRAY));
                
            } catch (SQLException | DocumentException e) {
                System.err.println("Error de obtencion desde BD impresion" + e);
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte Creado Correctamente");
        }catch (FileNotFoundException | DocumentException e) {
                System.err.println("Error de impresion" + e);
        } 
        catch (IOException ex) {
            Logger.getLogger(ImpresionListaProveedores.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error" +ex);
        }
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Ingresar Fechas");
        }

     
    


    }//GEN-LAST:event_Imprimir_Por_FechasActionPerformed

    private void Imprimir_idBoletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Imprimir_idBoletaActionPerformed
               try {        
        Document documento = new Document(PageSize.A4);
        Date Fecha = new Date();
        long numero = Fecha.getTime();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta+ "/Desktop/"+ "Boleta"+numero+".pdf"));
            com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/Img/Logochico.png");
            
            header.scaleToFit(207,88);
            header.setAlignment(Chunk.ALIGN_CENTER);
            
            Font fuente = new Font(Font.getFamily("ARIAL"),10,Font.BOLD);
            Paragraph nreporte = new Paragraph("NºBOLETA: "+ numero,fuente);
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Información De Boleta. \n \n");
            parrafo.setFont(FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.DARK_GRAY));
            
            documento.open();
            documento.add(header);
            documento.add(parrafo);
            documento.add(nreporte);

            
            PdfPTable tablaBoleta = new PdfPTable(9);
            tablaBoleta.setWidthPercentage(100);

            
            PdfPCell celda1 = new PdfPCell(new Paragraph("id_boleta", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda2 = new PdfPCell(new Paragraph("fecha", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda3 = new PdfPCell(new Paragraph("iva", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda4 = new PdfPCell(new Paragraph("total_pagar", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda5 = new PdfPCell(new Paragraph("efectivo", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda6 = new PdfPCell(new Paragraph("cambio", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda7 = new PdfPCell(new Paragraph("rut_cliente", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda8 = new PdfPCell(new Paragraph("id_empleado", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            PdfPCell celda9 = new PdfPCell(new Paragraph("id_forma_pago", FontFactory.getFont("Calibri", 10, Font.BOLD, BaseColor.RED)));
            
            tablaBoleta.addCell(celda1);
            tablaBoleta.addCell(celda2);
            tablaBoleta.addCell(celda3);
            tablaBoleta.addCell(celda4);
            tablaBoleta.addCell(celda5);
            tablaBoleta.addCell(celda6);
            tablaBoleta.addCell(celda7);
            tablaBoleta.addCell(celda8);
            tablaBoleta.addCell(celda9);
            
            
            try {
                Connection con  = Conexion.getConnection();
                PreparedStatement pst = con.prepareStatement("SELECT * FROM BOLETA WHERE ID_BOLETA='"+this.txtIdBoleta.getText()+"'");
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    do {                        
                        tablaBoleta.addCell(rs.getString(1));
                        tablaBoleta.addCell(rs.getString(2));
                        tablaBoleta.addCell(rs.getString(3));
                        tablaBoleta.addCell(rs.getString(4));
                        tablaBoleta.addCell(rs.getString(5));
                        tablaBoleta.addCell(rs.getString(6));
                        tablaBoleta.addCell(rs.getString(7));
                        tablaBoleta.addCell(rs.getString(8));
                        tablaBoleta.addCell(rs.getString(9));
                    } while (rs.next());
                    documento.add(tablaBoleta);
                }
                
                //Paragraph parrafo2 = new Paragraph();
                //parrafo2.setAlignment(Paragraph.ALIGN_CENTER);
                //parrafo2.add("\n \n ");
                //parrafo2.setFont(FontFactory.getFont("Calibri", 14, Font.BOLD, BaseColor.DARK_GRAY));
                
            } catch (SQLException | DocumentException e) {
                System.err.println("Error de obtencion desde BD impresion" + e);
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte Creado Correctamente");
        }catch (FileNotFoundException | DocumentException e) {
                System.err.println("Error de impresion" + e);
        } 
        catch (IOException ex) {
            Logger.getLogger(ImpresionListaProveedores.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error" +ex);
        }
        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, "Ingresar ID de la Boleta");
        }
    }//GEN-LAST:event_Imprimir_idBoletaActionPerformed

    private void txtCambioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCambioKeyTyped
        char c = evt.getKeyChar();
        if(c<'0'|| c >'9')evt.consume();
    }//GEN-LAST:event_txtCambioKeyTyped

 //---------------------------------------------------
    
    
        public void listarGananciasFiltro(JTable tabla){
            
        Connection con = Conexion.getConnection();

        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-YYYY"); //DD-MON-YYYY HH:MI
        String fecha = sdf.format(DateDesdeVentas.getDate());
        String fecha1 = sdf.format(DateHastaVentas.getDate());
            
        DefaultTableModel model;
        String [] columnas ={"ID_BOLETA","FECHA","IVA","TOTAL_PAGAR","EFECTIVO","CAMBIO","RUT_CLIENTE",
                            "ID_EMPLEADO","ID_FORMA_PAGO"};
        model= new DefaultTableModel(null, columnas);
        
        String sql = "select * from boleta where fecha between'" + fecha + "' and '" + fecha1 + "'";
        
        String [] filas = new String[9];
        Statement st = null;
        ResultSet rs = null;
        try{
            st = con.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next()){
                for (int i = 0; i < 9; i++) {
                    filas[i]=rs.getString(i+1);
                }
                model.addRow(filas);
            }
            tabla.setModel(model);
        }catch(Exception e){
          JOptionPane.showMessageDialog(null, " no se puede listar los datos"+ e.getMessage());
        }
    }

       
    public void LLenadodeFormaPagos(){
    this.cbFormaP.removeAllItems();
    try {
        Connection con = Conexion.getConnection();
        //preparedStatement pst = null;
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM FORMAS_PAGO");
        while (rs.next()){
        this.cbFormaP.addItem(rs.getString("FORMA_PAGO"));
        //cbPagar.addItem(rs.getString("TOTAL_PEDIDO"));
        }
    } catch(Exception e){
        System.err.println("error de llenado combobox desde bd" + e);
    }
   }   
        
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscar;
    private javax.swing.JButton BtnImprimir;
    private com.toedter.calendar.JDateChooser DateDesdeVentas;
    private com.toedter.calendar.JDateChooser DateHastaVentas;
    private javax.swing.JButton Imprimir_Por_Fechas;
    private javax.swing.JButton Imprimir_idBoleta;
    private javax.swing.JButton btnEditar;
    private javax.swing.JComboBox cbFormaP;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCambio;
    private javax.swing.JTextField txtEfectivo;
    private javax.swing.JTextField txtFormaPago;
    private javax.swing.JTextField txtIdBoleta;
    private javax.swing.JTextField txtTotalPagar;
    // End of variables declaration//GEN-END:variables
}


