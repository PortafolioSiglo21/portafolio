/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Image;
import java.io.FileOutputStream;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.itextpdf.text.pdf.PdfPTable;
import Modelo.Conexion;
import static Vistas.SolicitarProductosBodega.sesion_usuario;
import com.itextpdf.text.Element;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.pdf.PdfPCell;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;


/**
 *
 * @author samuel
 */
public class ImpresionListaProveedores extends javax.swing.JFrame {
    String user, nombre_usuario, hola;

    /**
     * Creates new form ImpresionListaProveedores
     */
    
    
    public ImpresionListaProveedores() {
        initComponents();
        setSize(408, 320);
        setResizable(false);
        setTitle("Impresion");
        setLocationRelativeTo(null);
        ///usuario
        user =Login.user;
        sesion_usuario = 1;
        setTitle("Impresion- sesion actual : "+ user);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        
        ImageIcon wallpaper = new ImageIcon("src/Img/orange-gradient-wallpaper-4422.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel1_impresion.getWidth(), 
        jLabel1_impresion.getHeight(), Image.SCALE_DEFAULT));
        jLabel1_impresion.setIcon(icono);
        this.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImpresionProve = new javax.swing.JButton();
        jLabel1_impresion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnImpresionProve.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/reporte.png"))); // NOI18N
        btnImpresionProve.setText("Imprimir Todos");
        btnImpresionProve.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnImpresionProve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImpresionProveActionPerformed(evt);
            }
        });
        getContentPane().add(btnImpresionProve, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 130, 90));
        getContentPane().add(jLabel1_impresion, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 410, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImpresionProveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImpresionProveActionPerformed
        Document documento = new Document(PageSize.A4);
        
        //SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-YYYY HH:mm"); //DD-MON-YYYY HH:MI
        Calendar calendar = new GregorianCalendar();
        Date fecha = new Date();
        long numero = fecha.getTime();
        String fech = calendar.get(Calendar.DAY_OF_MONTH)+"-"+calendar.get(Calendar.MONTH)+"-"+calendar.get(Calendar.YEAR);
  
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta+ "/Desktop/"+ "ReporteProvedores_"+fech+".pdf"));
            com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/Img/LogoRestaurante Siglo 21.png");
            
            
          
            header.scaleToFit(207,88);
            header.setAlignment(Chunk.ALIGN_CENTER);
            
            Font fuente = new Font(Font.getFamily("ARIAL"),10,Font.BOLD);
            Paragraph nRepo = new Paragraph("NÂ° Reporte: " + numero, fuente);
            Paragraph Creado = new Paragraph("Creado Por: " + user, fuente);
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Informacion de Proveedores. \n \n \n");
            
            parrafo.setFont(FontFactory.getFont("arial",12,Font.BOLD,BaseColor.RED));
            
            documento.open();
            documento.add(header);
            documento.add(nRepo);
            documento.add(Creado);
            documento.add(parrafo);
            
            
            PdfPTable tablaprove = new PdfPTable(8);
            tablaprove.setWidthPercentage(100);
            //tablaprove.addCell("ID_PROVEEDOR");
            //tablaprove.addCell("RUT_PROVEEDOR");
            //tablaprove.addCell("PROVEEDOR");
            //tablaprove.addCell("NOMBRE_CONTACTO");
            //tablaprove.addCell("TELEFONOS");
            //tablaprove.addCell("SITIO_WEB");
            //tablaprove.addCell("MAIL_PROVEEDOR");
            //tablaprove.addCell("ID_ADMIN");
            PdfPCell celda1 = new PdfPCell(new Paragraph("Id",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            PdfPCell celda2 = new PdfPCell(new Paragraph("Rut provedoor",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            PdfPCell celda3 = new PdfPCell(new Paragraph("Proveedor",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            PdfPCell celda4 = new PdfPCell(new Paragraph("Nombre Contacto",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            PdfPCell celda5 = new PdfPCell(new Paragraph("Telefono",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            PdfPCell celda6 = new PdfPCell(new Paragraph("Web",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            PdfPCell celda7 = new PdfPCell(new Paragraph("Email",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            PdfPCell celda8 = new PdfPCell(new Paragraph("IdAdmin",FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLUE)));
            tablaprove.addCell(celda1);
            tablaprove.addCell(celda2);
            tablaprove.addCell(celda3);
            tablaprove.addCell(celda4);
            tablaprove.addCell(celda5);
            tablaprove.addCell(celda6);
            tablaprove.addCell(celda7);
            tablaprove.addCell(celda8);
            
            tablaprove.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            try {
                Connection con  = Conexion.getConnection();
                PreparedStatement pst = con.prepareStatement("SELECT * FROM PROVEEDORES");
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    do{  
                        String h = rs.getString(1);
                        tablaprove.addCell(new Paragraph(h,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                        //tablaprove.addCell(rs.getString(1));
                        String d = rs.getString(2);
                        tablaprove.addCell(new Paragraph(d,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                        //tablaprove.addCell(rs.getString(2));
                        String c = rs.getString(3);
                        tablaprove.addCell(new Paragraph(c,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                        //tablaprove.addCell(rs.getString(3));
                        String b = rs.getString(4);
                        tablaprove.addCell(new Paragraph(b,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                        //tablaprove.addCell(rs.getString(4));
                        String f = rs.getString(5);
                        tablaprove.addCell(new Paragraph(f,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                        //tablaprove.addCell(rs.getString(5));
                        String a = rs.getString(6);
                        tablaprove.addCell(new Paragraph(a,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                        //tablaprove.addCell(rs.getString(6));
                        String l = rs.getString(7);
                        tablaprove.addCell(new Paragraph(l,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                        //tablaprove.addCell(rs.getString(7));
                        String n = rs.getString(8);
                        tablaprove.addCell(new Paragraph(n,FontFactory.getFont("arial",9,Font.BOLD,BaseColor.BLACK)));
                       
                
                    } while (rs.next());
                    documento.add(tablaprove);
                }
                
                //Paragraph parrafo2 = new Paragraph();
                //parrafo2.setAlignment(Paragraph.ALIGN_CENTER);
                //parrafo2.add("\n \n ");
                //parrafo2.setFont(FontFactory.getFont("Calibri", 14, Font.BOLD, BaseColor.DARK_GRAY));
                
            } catch (SQLException | DocumentException e) {
                System.err.println("Error de obtencion desde BD impresion" + e);
            }
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte Creado Correctamente");
        }catch (FileNotFoundException | DocumentException e) {
                System.err.println("Error de impresion" + e);
        } 
        catch (IOException ex) {
            Logger.getLogger(ImpresionListaProveedores.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error" +ex);
        }
    }//GEN-LAST:event_btnImpresionProveActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImpresionProve;
    private javax.swing.JLabel jLabel1_impresion;
    // End of variables declaration//GEN-END:variables

    
}
