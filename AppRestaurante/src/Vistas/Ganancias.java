/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vistas;


import Controlador.GananciasDO;
import Controlador.Pedido_ProvedorDO;
import Modelo.Conexion;
import static Vistas.SolicitudesProduFinanzas.sesion_usuario;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public final class Ganancias extends javax.swing.JFrame {
    String user, nombre_usuario;
    
    DefaultTableModel model;
    
      private GananciasDO gdo = new GananciasDO();
      private Pedido_ProvedorDO ppdo = new Pedido_ProvedorDO();
    
    public Ganancias() throws SQLException {
        initComponents();
        setSize(1190, 665);
        setResizable(false);
        setTitle("Ganancias");
        setLocationRelativeTo(null);
        
        ImageIcon wallpaper = new ImageIcon("src/Img/orange-gradient-wallpaper-4422.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel5.getWidth(), 
        jLabel5.getHeight(), Image.SCALE_DEFAULT));
        jLabel5.setIcon(icono);
        this.repaint();
        //****
        user =Login.user;
        sesion_usuario = 1;
        setTitle("Ganancias - sesion actual : "+ user);
        //****
        listarGanancias();
        listarPagado();
    }
    
    public void listarPagado() throws SQLException{
      //ppdo.listarProductos(jTable1);
      ppdo.listarPagado(jTable2);
    }
    
    
      public void listarGanancias() throws SQLException{
      gdo.listarGanancias(jTable1);
    }
      
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        DateDesdeVentas = new com.toedter.calendar.JDateChooser();
        DateHastaVentas = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        DateDesdeCompras = new com.toedter.calendar.JDateChooser();
        DateHastaCompras = new com.toedter.calendar.JDateChooser();
        BtnCalcularVentas = new javax.swing.JButton();
        BtnCalcularCompras = new javax.swing.JButton();
        txtVentas = new javax.swing.JTextField();
        txtCompras = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 160, 745, 200));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Logochico.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(929, 0, -1, -1));

        jLabel2.setText("Hasta");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(993, 225, -1, -1));

        jLabel3.setText("Desde");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(805, 225, -1, -1));
        getContentPane().add(DateDesdeVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(845, 219, 130, -1));
        getContentPane().add(DateHastaVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(1031, 219, 130, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/volver.png"))); // NOI18N
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 421, 745, 208));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Ventas");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 120, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Compras");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 388, 71, -1));

        jLabel6.setText("Hasta");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(985, 486, -1, -1));

        jLabel8.setText("Desde");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(805, 486, -1, -1));
        getContentPane().add(DateDesdeCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(845, 480, 130, -1));
        getContentPane().add(DateHastaCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(1023, 480, 130, -1));

        BtnCalcularVentas.setText("Calcular");
        BtnCalcularVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCalcularVentasActionPerformed(evt);
            }
        });
        getContentPane().add(BtnCalcularVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(845, 257, -1, -1));

        BtnCalcularCompras.setText("Calcular");
        BtnCalcularCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCalcularComprasActionPerformed(evt);
            }
        });
        getContentPane().add(BtnCalcularCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(845, 521, -1, -1));

        txtVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVentasActionPerformed(evt);
            }
        });
        txtVentas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtVentasKeyReleased(evt);
            }
        });
        getContentPane().add(txtVentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(926, 258, 168, -1));

        txtCompras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComprasKeyReleased(evt);
            }
        });
        getContentPane().add(txtCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(922, 522, 168, -1));

        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1180, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     Connection con = Conexion.getConnection();
     PreparedStatement pst = null;
        try {
            pst = con.prepareStatement(
                    "SELECT ID_CARGO, STATUS_EMPLEADO FROM EMPLEADOS WHERE USUARIO = ?");
        } catch (SQLException ex) {
            Logger.getLogger(Ganancias.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            pst.setString(1, user);
        } catch (SQLException ex) {
            Logger.getLogger(Ganancias.class.getName()).log(Level.SEVERE, null, ex);
        }
                 ResultSet rs = null;
        try {
            rs = pst.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(Ganancias.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if(rs.next()){
                int ID_CARGO = rs.getInt("ID_CARGO");
                String STATUS_EMPLEADO = rs.getString("STATUS_EMPLEADO");
                
                if(ID_CARGO== 1  && STATUS_EMPLEADO.equalsIgnoreCase("ACTIVO")){
                    dispose();
                    new InicioFinanzasAdmin().setVisible(true);
                    
                } else if(ID_CARGO== 2  && STATUS_EMPLEADO.equalsIgnoreCase("ACTIVO")){
                    dispose();
                    new InicioFinanzas().setVisible(true);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Datos de Acceso Incorrectos");
                System.err.println("Datos de Acceso Incorrectos");
                con.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Ganancias.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVentasActionPerformed
    }//GEN-LAST:event_txtVentasActionPerformed

    
    private void txtVentasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVentasKeyReleased
    try {
        Connection con = Conexion.getConnection();
        //preparedStatement pst = null;
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT SUM(TOTAL_PAGAR) FROM BOLETA");
        rs.next();
        this.txtVentas.setText(String.valueOf(rs.getString("SUM(TOTAL_PAGAR)")));        //cbPagar.addItem(rs.getString("TOTAL_PEDIDO"));
        
    } catch(Exception e){
        System.err.println("error de llenado" + e);
    }
    }//GEN-LAST:event_txtVentasKeyReleased

    private void txtComprasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComprasKeyReleased
    try {
        Connection con = Conexion.getConnection();
        //preparedStatement pst = null;
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT SUM(TOTAL_PAGAR) FROM PEDIDOPROVEDOR WHERE ESTADO_PEDIDO='PAGADO'");
        rs.next();
        this.txtCompras.setText(String.valueOf(rs.getString("SUM(TOTAL_PAGAR)")));        //cbPagar.addItem(rs.getString("TOTAL_PEDIDO"));
        
    } catch(Exception e){
        System.err.println("error de llenado" + e);
    }//GEN-LAST:event_txtComprasKeyReleased
    }
    
    
    private void BtnCalcularVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCalcularVentasActionPerformed
    try {
        Connection con = Conexion.getConnection();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-YYYY"); //DD-MON-YYYY HH:MI
        String fecha = sdf.format(DateDesdeVentas.getDate());
        String fecha1 = sdf.format(DateHastaVentas.getDate());
        
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT SUM(TOTAL_PAGAR) FROM BOLETA WHERE FECHA BETWEEN '" + fecha + "' and '" + fecha1 + "'");
        rs.next();
        this.txtVentas.setText(String.valueOf(rs.getString("SUM(TOTAL_PAGAR)")));        //cbPagar.addItem(rs.getString("TOTAL_PEDIDO"));
        listarGananciasFiltro(jTable1);

    } catch(Exception e){
        System.err.println("error de llenado" + e);
    }
    }//GEN-LAST:event_BtnCalcularVentasActionPerformed

    private void BtnCalcularComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCalcularComprasActionPerformed
    try {
        Connection con = Conexion.getConnection();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-YYYY"); //DD-MON-YYYY HH:MI
        String fecha = sdf.format(DateDesdeCompras.getDate());
        String fecha1 = sdf.format(DateHastaCompras.getDate());
        
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT SUM(TOTAL_PAGAR) from pedidoprovedor where ESTADO_PEDIDO = 'PAGADO' AND FECH_PAGO BETWEEN '" + fecha + "' and '" + fecha1 + "'");
        rs.next();
        this.txtCompras.setText(String.valueOf(rs.getString("SUM(TOTAL_PAGAR)"))); 
        listarComprasFiltro(jTable2);     
    } catch(Exception e){
        System.err.println("error de llenado" + e);
    }
    }//GEN-LAST:event_BtnCalcularComprasActionPerformed

 //---------------------------------------------------
    
    
        public void listarGananciasFiltro(JTable tabla){
            
        Connection con = Conexion.getConnection();

        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-YYYY"); //DD-MON-YYYY HH:MI
        String fecha = sdf.format(DateDesdeVentas.getDate());
        String fecha1 = sdf.format(DateHastaVentas.getDate());
            
        DefaultTableModel model;
        String [] columnas ={"ID_BOLETA","FECHA","IVA","TOTAL_PAGAR","EFECTIVO","CAMBIO","RUT_CLIENTE",
                            "ID_EMPLEADO","ID_FORMA_PAGO"};
        model= new DefaultTableModel(null, columnas);
        
        String sql = "select * from boleta where fecha between'" + fecha + "' and '" + fecha1 + "'";
        
        String [] filas = new String[9];
        Statement st = null;
        ResultSet rs = null;
        try{
            st = con.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next()){
                for (int i = 0; i < 9; i++) {
                    filas[i]=rs.getString(i+1);
                }
                model.addRow(filas);
            }
            tabla.setModel(model);
        }catch(Exception e){
          JOptionPane.showMessageDialog(null, " no se puede listar los datos"+ e.getMessage());
        }
    }
        
        public void listarComprasFiltro(JTable tabla){
        Connection con = Conexion.getConnection();

        SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-YYYY"); //DD-MON-YYYY HH:MI
        String fecha = sdf.format(DateDesdeCompras.getDate());
        String fecha1 = sdf.format(DateHastaCompras.getDate());
        
        String [] columnas ={"ID_PEDIDO","FECH_SOLICITUD","IVA","TOTAL_PAGAR","ID_PROVEEDOR","ID_EMPLEADO","PRODUCTO","CATEGORIA","DESCRIPCION","CANTIDAD","FECH_RECEPCION","FECH_PAGO","FECH_PEDIDO","ESTADO_PEDIDO","PRECIO"};
        model= new DefaultTableModel(null,columnas);
        
        String sql = "SELECT * FROM PEDIDOPROVEDOR WHERE ESTADO_PEDIDO='PAGADO' AND FECH_PAGO BETWEEN '" + fecha + "' and '" + fecha1 + "'";
        
        String [] filas = new String[15];
        Statement st = null;
        ResultSet rs = null;
        try{
            st = con.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next()){
                for (int i = 0; i < 15; i++) {
                    filas[i]=rs.getString(i+1);
                }
                model.addRow(filas);
            }
            tabla.setModel(model);
        }catch(Exception e){
          JOptionPane.showMessageDialog(null, " no se puede listar los datos"+ e.getMessage());
        }
    }
        
        
        
        
        
        
        
        
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCalcularCompras;
    private javax.swing.JButton BtnCalcularVentas;
    private com.toedter.calendar.JDateChooser DateDesdeCompras;
    private com.toedter.calendar.JDateChooser DateDesdeVentas;
    private com.toedter.calendar.JDateChooser DateHastaCompras;
    private com.toedter.calendar.JDateChooser DateHastaVentas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtCompras;
    private javax.swing.JTextField txtVentas;
    // End of variables declaration//GEN-END:variables
}
